#CREATE VERTEX vertex_1(PRIMARY_ID id uint, vertex1_attr1 float, vertex1_attr2 uint, vertex1_attr3 string compress, vertex1_attr4 string, 
# vertex1_attr5 int, vertex1_attr6 double, vertex1_attr7 datetime, vertex1_attr8 bool) WITH primary_id_as_attribute="TRUE"


CREATE or replace QUERY attr(string vType) FOR GRAPH testGraph {
  Start={vType};
  String tmp;
  result= select s from Start:s-(:e)- :t
          ACCUM   tmp = s.vertex1_attr4,
                 tmp = e.edge_1_attr4,
                 tmp = t.vertex1_attr4
                ;
}

#constantString
CREATE or replace QUERY constant(string vType) FOR GRAPH testGraph {
  Start={vType};
  String tmp;
  result= select s from Start:s-(:e)- :t
          ACCUM tmp = s.getAttr("vertex1_attr4","string"),
                 tmp = e.getAttr("vertex1_attr4","string"),
                 tmp = t.getAttr("vertex1_attr4","string")
                ;
}


#globalVariable
CREATE or replace QUERY variable(string vType) FOR GRAPH testGraph{
  string attrName="vertex1_attr4";
  string attrName2="edge_1_attr4";
  String tmp;
  Start={vType};
  result= select s from Start:s-(:e)- :t
          ACCUM tmp = s.getAttr(attrName,"string"),
                tmp = e.getAttr(attrName2,"string"),
                tmp = t.getAttr(attrName,"string")
                ;
}
# parameter
CREATE or replace QUERY parameter(string vType,String attrName) FOR GRAPH testGraph{
  Start={vType};
  String tmp;
  result= select s from Start:s-(:e)- :t
          ACCUM tmp = s.getAttr(attrName,"string"),
                tmp = e.getAttr(attrName,"string"),
                tmp = t.getAttr(attrName,"string")
                ;
}


#constantString
CREATE or replace QUERY where_attr(string vType) {
  Start={vType};
 result= select s from vertex_1:s-(:e)- :t
          WHERE s.getAttr("vertex1_attr4","bool")
          AND   e.getAttr("vertex1_attr4","bool")
          or    t.getAttr("vertex1_attr4","bool")
          ; 
    
}

